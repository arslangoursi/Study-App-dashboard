"use client";

import "@/styles/dashboardAdmin.scss";
import "@/styles/listing.scss";

import {
  Area,
  AreaChart,
  CartesianGrid,
  Line,
  LineChart,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis
} from "recharts";

import AdminAnalytics from "@/components/AdminAnalytics";
import AdminAnalyticsCard from "@/components/AdminAnalyticsCard";
import CurrencyDisplay from "@/components/CurrencyDisplay";
import DateRange from "@/components/DateRange";
import dayjs from "dayjs";
import numberDisplay from "@/utils/numberDisplay";
import useLanguage from "@/hooks/useLanguage";
import { useState } from "react";
import { useUser } from "@/components/UserProvider";

const formatCurrency = (value: number) => (
  <CurrencyDisplay>{value}</CurrencyDisplay>
);

const chartData = (filteredData: Record<string, number>) => {
  return Object.entries(filteredData).map(([name, value]) => ({
    name,
    sales: value
  }));
};

const languageText = (language: string, enText: string, arText: string) =>
  language === "ar" ? arText : enText;

export default function AdminDashboard({
  data
}: {
  data: {
    noOfProjects: number;
    noOfUsers: number;
    noOfProperties: number;
    noOfCustomers: number;
    totalSold: number;
    totalPaid: number;
    totalExpected: number;
    totalSoldProperties: number;
    totalRemainingProperties: number;
    soldByDate: Record<string, number>;
    analyticsByDate: Record<string, { clicks: number; visits: number }>;
  };
}) {
  const user = useUser();
  const [language] = useLanguage();
  const [dateRange, setDateRange] = useState({
    startDate: dayjs().subtract(1, "month").toDate(),
    endDate: new Date()
  });

  const soldByDateFiltered = Object.fromEntries(
    Object.entries(data.soldByDate).filter(
      ([date]) =>
        dayjs(date).isAfter(dateRange.startDate) &&
        dayjs(date).isBefore(dateRange.endDate)
    )
  );

  const analyticsByDateFiltered = Object.fromEntries(
    Object.entries(data.analyticsByDate).filter(
      ([date]) =>
        dayjs(date).isAfter(dateRange.startDate) &&
        dayjs(date).isBefore(dateRange.endDate)
    )
  );

  return (
    <>
      <div className="name__title">
        <div className="name__title_heading">
          {languageText(language, `Hi, ${user.name}`, `مرحبًا، ${user.name}`)}
        </div>
        <div className="name__title_subheading">
          {languageText(
            language,
            "Let's learn something new today!",
            "لنَتَعَلَّم شيئًا جديدًا اليوم! "
          )}
        </div>
      </div>

      <AdminAnalytics>
        <AdminAnalyticsCard
          icon={
            <svg
              width="31"
              height="31"
              viewBox="0 0 31 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M30.4187 10.8449L15.9121 18.6908C15.7816 18.7611 15.6379 18.7977 15.4922 18.7977C15.3466 18.7977 15.2029 18.7611 15.0723 18.6908L0.527992 10.8257C0.373284 10.7418 0.242458 10.6137 0.149515 10.4552C0.0565725 10.2966 0.00501038 10.1136 0.00034703 9.92562C-0.00431632 9.73766 0.0380946 9.55185 0.123041 9.38808C0.207988 9.22431 0.332273 9.08875 0.482596 8.99591L15.0269 0.135003C15.1703 0.0465154 15.3324 0 15.4973 0C15.6622 0 15.8242 0.0465154 15.9676 0.135003L30.5145 8.99591C30.6686 9.09 30.7956 9.22898 30.8812 9.39724C30.9668 9.56549 31.0075 9.75637 30.9989 9.94842C30.9902 10.1405 30.9325 10.3261 30.8323 10.4845C30.732 10.6428 30.5931 10.7676 30.4313 10.8449H30.4187ZM27.9547 22.0733C27.7336 21.9423 27.5694 21.7212 27.4982 21.4586C27.4271 21.1959 27.4547 20.9133 27.5751 20.6728C27.6955 20.4324 27.8988 20.2538 28.1402 20.1763C28.3817 20.0989 28.6415 20.129 28.8626 20.26L30.4792 21.1872C30.7022 21.315 30.8694 21.5338 30.9441 21.7956C31.0189 22.0575 30.9949 22.3409 30.8777 22.5835C30.7816 22.7858 30.6275 22.9486 30.4388 23.0472L15.9121 30.893C15.7816 30.9634 15.6379 31 15.4922 31C15.3466 31 15.2029 30.9634 15.0723 30.893L0.527992 23.028C0.305164 22.9065 0.135114 22.6946 0.054454 22.4381C-0.0262059 22.1815 -0.011024 21.9008 0.096731 21.6563C0.181495 21.456 0.324067 21.2913 0.502772 21.1872L2.01597 20.3258C2.22769 20.2004 2.47538 20.1674 2.70865 20.2336C2.94193 20.2997 3.14329 20.46 3.27178 20.6819C3.40027 20.9038 3.44625 21.1706 3.40036 21.428C3.35448 21.6855 3.22018 21.9142 3.02476 22.0678L15.4935 28.8081L27.9547 22.0678V22.0733ZM27.9925 15.8295C27.8353 15.6554 27.7399 15.4263 27.7232 15.1829C27.7066 14.9396 27.7699 14.6977 27.9018 14.5002C28.0337 14.3028 28.2257 14.1626 28.4436 14.1047C28.6615 14.0467 28.8913 14.0746 29.0921 14.1835L30.4767 14.9763C30.6333 15.0656 30.7639 15.2008 30.8536 15.3666C30.9434 15.5324 30.9887 15.7221 30.9845 15.9145C30.9803 16.1068 30.9268 16.294 30.8299 16.455C30.733 16.6159 30.5967 16.7442 30.4363 16.8253L15.9121 24.6712C15.7816 24.7416 15.6379 24.7782 15.4922 24.7782C15.3466 24.7782 15.2029 24.7416 15.0723 24.6712L0.527992 16.8061C0.30563 16.6841 0.136005 16.4722 0.0554088 16.2159C-0.0251879 15.9595 -0.0103561 15.6791 0.096731 15.4345C0.181956 15.2345 0.324405 15.0699 0.502772 14.9654L1.99075 14.1122C2.2014 13.9831 2.44937 13.9461 2.6842 14.0088C2.91903 14.0715 3.12307 14.2291 3.25482 14.4497C3.38656 14.6702 3.4361 14.9371 3.39337 15.196C3.35063 15.4549 3.21882 15.6863 3.02476 15.8432L15.5011 22.5918L27.9925 15.8295ZM15.4935 16.6113L27.9925 9.84359L15.4935 2.22267L2.98189 9.84359L15.4935 16.6113Z"
                fill="var(--golden)"
              />
            </svg>
          }
          title={language === "ar" ? "إجمالي المشاريع" : "Total Projects"}
          value={data.noOfProjects}
          color="var(--goldenLight)"
        />

        <AdminAnalyticsCard
          icon={
            <svg
              width="31"
              height="31"
              viewBox="0 0 31 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M21.2225 9.76178C21.2207 8.84063 21.5276 8.55077 22.2227 8.56305C25.4579 8.61709 25.0986 8.21424 26.292 12.3066C27.7832 17.4209 29.2582 22.5425 30.7386 27.6642C31.3885 29.9142 30.8343 31.0024 29.0361 31.0024C20.0201 31.0049 11.0041 31.0049 1.98627 31.0024C0.137573 31.0024 -0.396816 29.9167 0.283808 27.5708C1.93572 21.8818 3.58222 16.1902 5.23594 10.5036C5.71255 8.86519 6.02308 8.59253 7.32475 8.59007C7.80498 8.59007 8.29062 8.64903 8.76543 8.57533C9.44606 8.46971 9.78547 8.80133 9.76741 9.83548C8.84126 9.57264 8.63184 10.4103 8.47296 11.3904C8.33756 12.2182 8.12633 13.0264 7.9133 14.004C8.686 14.004 9.39009 14.0138 10.0942 13.9991C10.4571 13.9917 10.8037 14.0728 10.8181 14.6476C10.8362 15.328 10.4318 15.3698 10.0527 15.3698C9.21136 15.3698 8.37006 15.355 7.52876 15.3722C6.85355 15.387 6.68384 14.9473 6.86077 14.1244C7.15504 12.7586 7.44029 11.3879 7.73276 10.0074C6.88965 9.66107 6.44373 9.97058 6.12418 11.103C4.51198 16.8117 2.83479 22.486 1.18288 28.1751C0.820003 29.423 0.949989 29.6932 1.94294 29.6956C4.25743 29.7054 6.57191 29.6858 8.88639 29.7128C9.3269 29.7177 9.61576 29.6465 9.70784 28.9538C9.93351 27.2687 10.179 25.5836 10.4607 23.9132C10.5907 23.1444 10.3758 23.0215 9.88115 23.0535C9.13192 23.1001 8.37908 23.0657 7.62805 23.0657C7.24712 23.0657 6.84813 23.0166 6.86619 22.3386C6.88063 21.7638 7.23268 21.6705 7.59014 21.6705C8.70225 21.673 9.81435 21.6631 10.9265 21.673C11.5295 21.6779 11.7948 21.9776 11.6342 22.8987C11.3038 24.8049 11.0907 26.7479 10.7369 28.6443C10.5564 29.6146 10.7874 29.7226 11.4067 29.7153C14.1111 29.6809 16.8174 29.6661 19.5218 29.7226C20.2512 29.7374 20.2819 29.3763 20.1465 28.5804C19.8305 26.7111 19.594 24.8172 19.2691 22.9528C19.1012 21.9874 19.3593 21.6631 20.0219 21.668C21.1033 21.6779 22.1865 21.668 23.268 21.673C23.6507 21.673 24.0425 21.7319 24.019 22.4173C23.9991 23.0117 23.6399 23.0682 23.2896 23.0682C22.479 23.0657 21.6666 23.0903 20.856 23.0584C20.4534 23.0412 20.3252 23.2008 20.4137 23.756C20.6971 25.5099 20.9733 27.2638 21.2153 29.0275C21.2929 29.5974 21.4807 29.7177 21.8778 29.7128C24.3115 29.6882 26.7469 29.7079 29.1806 29.6932C30.0056 29.6882 30.1554 29.3984 29.854 28.3495C28.1587 22.4688 26.4472 16.5955 24.7502 10.7173C24.6202 10.2654 24.4613 9.92636 24.0659 9.88215C23.5099 9.82074 23.1127 9.82319 23.425 10.8819C23.7247 11.8989 23.8908 12.9895 24.1291 14.0409C24.3241 14.9055 24.1761 15.3919 23.4413 15.3747C22.6 15.355 21.7587 15.3747 20.9174 15.3673C20.578 15.3649 20.2115 15.3428 20.2024 14.7115C20.1916 13.9917 20.5906 14.004 20.9625 14.004C20.9932 14.004 21.0221 14.0065 21.0528 14.004C21.6937 13.9205 22.349 14.176 22.9809 13.8542C22.7227 12.6014 22.5043 11.329 22.1884 10.1057C22.0493 9.5972 21.5691 10.0295 21.2225 9.76178Z"
                fill="var(--golden)"
              />
              <path
                d="M15.5538 22.4148C17.2671 22.4148 17.2725 22.4123 17.5866 24.7287C17.695 25.5295 17.7888 26.3377 17.8629 27.1458C17.9062 27.615 18.0253 28.2242 17.5108 28.3323C17.0198 28.4354 16.9638 27.8901 16.9114 27.3792C16.8194 26.4507 16.6695 25.5295 16.6063 24.5961C16.5648 23.982 16.4059 23.7756 15.9438 23.756C14.55 23.697 14.5464 23.6675 14.3081 25.4976C14.2196 26.1804 14.1582 26.8682 14.0806 27.5536C14.0247 28.0473 13.8694 28.4502 13.4451 28.3372C13.0768 28.2389 13.0245 27.8312 13.0786 27.3792C13.2429 26.011 13.4036 24.6427 13.5643 23.272C13.6383 22.6358 13.9145 22.3755 14.3821 22.4074C14.7739 22.4369 15.1638 22.4148 15.5538 22.4148Z"
                fill="var(--golden)"
              />
              <path
                d="M11.6614 14.3555C12.342 15.257 12.5568 16.0946 12.3113 17.1558C12.1073 18.0352 12.2337 18.6616 13.084 18.4454C13.2248 18.4086 13.4108 18.4061 13.5209 18.5044C13.8061 18.7574 14.0138 19.202 13.974 19.6147C13.9361 20.0028 13.5678 19.821 13.3494 19.821C11.461 19.8357 9.57074 19.8333 7.68233 19.8235C7.29959 19.821 6.81214 19.9021 6.80672 19.1381C6.7995 18.3717 7.27251 18.4356 7.66608 18.438C8.65542 18.438 9.64657 18.4086 10.6341 18.4503C11.0475 18.4675 11.2028 18.3128 11.2515 17.7355C11.34 16.662 11.5043 15.5984 11.6614 14.3555Z"
                fill="var(--golden)"
              />
              <path
                d="M17.0015 19.8281C17.0809 18.1725 17.9493 18.4623 18.7148 18.4034C18.5938 17.0523 18.1605 15.6374 19.2762 14.5591C19.4098 15.6252 19.5868 16.6348 19.6481 17.6566C19.6879 18.3174 19.8738 18.4648 20.3143 18.45C21.365 18.4157 22.4158 18.4402 23.4665 18.4378C23.8167 18.4353 24.176 18.4746 24.1977 19.074C24.2211 19.7569 23.8348 19.8256 23.4521 19.8281C21.3199 19.8306 19.1896 19.8281 17.0015 19.8281Z"
                fill="var(--golden)"
              />
              <path
                d="M26.3894 25.2351C25.9543 23.8079 25.5806 22.5674 25.1997 21.3343C25.039 20.816 24.8819 20.2436 25.3856 19.9882C25.8532 19.7524 25.9922 20.3763 26.1276 20.8062C26.5952 22.307 27.0303 23.8275 27.4925 25.3309C27.7579 26.1955 27.5376 26.564 26.8787 26.5615C25.586 26.5566 24.2952 26.5517 23.0025 26.5665C22.6306 26.5714 22.3075 26.4731 22.3057 25.8836C22.3039 25.2646 22.6613 25.2277 23.0134 25.2302C24.093 25.24 25.1708 25.2351 26.3894 25.2351Z"
                fill="var(--golden)"
              />
              <path
                d="M10.8364 12.5082C10.1955 12.3657 9.50767 12.9602 9.22242 11.8573C9.12132 11.4667 9.39032 11.1867 9.67015 11.1056C10.4681 10.8673 10.5421 11.7344 10.8364 12.5082Z"
                fill="var(--golden)"
              />
              <path
                d="M20.085 12.6557C20.4569 11.7665 20.493 10.9043 21.2566 11.1057C21.5527 11.1843 21.7784 11.4766 21.6791 11.877C21.4101 12.9628 20.7529 12.2946 20.085 12.6557Z"
                fill="var(--golden)"
              />
              <path
                d="M15.5137 1.37984e-05C11.7026 -0.00981188 9.2599 5.22973 10.9389 9.92886C12.1052 13.1934 13.8058 16.0429 15.0136 19.2854C15.3025 20.0591 15.7249 19.983 16.0553 19.1208C16.9959 16.6545 18.1206 14.3406 19.2057 11.9947C19.5722 11.2037 19.9278 10.3882 20.1932 9.52846C21.5942 4.95952 19.1533 0.00983947 15.5137 1.37984e-05ZM19.0107 9.72006C17.9257 12.3411 16.7143 14.8613 15.4884 17.5781C14.2463 14.795 13.0078 12.1937 11.9012 9.49161C10.9606 7.19486 11.3993 4.25207 12.7623 2.68242C14.2391 0.980125 16.4272 0.896607 18.0159 2.47854C19.6083 4.06539 20.0867 7.12854 19.0107 9.72006Z"
                fill="var(--golden)"
              />
              <path
                d="M15.5119 2.68019C13.7011 2.67527 12.2893 4.57408 12.3128 6.97892C12.3363 9.30269 13.7968 11.2506 15.5047 11.2359C17.2378 11.2212 18.6189 9.31006 18.6208 6.92488C18.6244 4.466 17.3191 2.6851 15.5119 2.68019ZM15.5173 9.85047C14.2752 9.86275 13.3437 8.62717 13.3364 6.9519C13.3274 5.30855 14.2806 3.97226 15.4704 3.95507C16.6547 3.93787 17.6386 5.25942 17.6603 6.8954C17.682 8.55103 16.7504 9.83573 15.5173 9.85047Z"
                fill="var(--golden)"
              />
            </svg>
          }
          title={language === "ar" ? "إجمالي عدد العملاء" : "Total Customers"}
          value={data.noOfCustomers}
          color="var(--goldenLight)"
        />
        <AdminAnalyticsCard
          icon={
            <svg
              width="31"
              height="31"
              viewBox="0 0 31 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.2313 15.5254V10.8696C8.54771 11.5287 7.47264 9.63738 8.65034 8.32103L18.9944 0.102005C19.1285 -0.0235405 19.3352 -0.036545 19.4838 0.0816664L29.8514 8.2862C29.8678 8.2989 29.8824 8.3119 29.8967 8.32861C31.2095 9.76483 29.8241 11.6616 28.2327 10.8954V17.4463C27.9261 17.4759 27.6107 17.537 27.2892 17.6333C27.2651 17.6401 27.2411 17.6474 27.2173 17.6552V10.4416C27.2173 10.2551 20.1057 4.53271 19.3206 3.91096C18.4888 4.5549 11.2463 10.2311 11.2463 10.4709V15.6338C11.1526 15.6116 11.0585 15.5907 10.9641 15.5711C10.8586 15.5493 10.7514 15.5373 10.6437 15.5352L10.2313 15.5254ZM0 16.1559H4.84448L4.56893 28.2838H0V16.1559ZM5.93063 27.3044L6.16101 17.2378L10.609 17.3434C12.4868 17.7323 14.3487 18.8176 16.2068 20.071L19.6616 20.1529C21.2233 20.2858 22.0054 21.9186 20.462 22.9427C19.2293 23.8181 17.6325 23.7291 15.9978 23.5407C14.8695 23.4573 14.7846 25.002 15.9636 25.0353C16.3716 25.0771 16.8194 24.9903 17.208 24.999C19.2529 25.0455 20.9463 24.6876 22.0146 23.0677L22.5609 21.849L27.7594 19.3772C30.351 18.5762 32.1158 21.3582 30.1777 23.2171C26.3925 25.8857 22.5227 28.0638 18.5767 29.8034C15.7007 31.492 12.8664 31.3652 10.0693 29.6017L5.93063 27.3044ZM20.7449 11.8072C20.6113 11.8811 20.4445 11.8309 20.3728 11.6958C20.3555 11.6636 20.3446 11.6282 20.3408 11.5917C20.337 11.5551 20.3403 11.5182 20.3505 11.483C20.3608 11.4478 20.3778 11.415 20.4005 11.3865C20.4233 11.358 20.4513 11.3343 20.4831 11.3169C21.1144 10.9682 21.4086 10.5173 21.4677 10.0764C21.4991 9.84076 21.4632 9.6044 21.3763 9.3853C21.2875 9.16348 21.1467 8.96176 20.9682 8.79923C20.6211 8.48343 20.1343 8.3172 19.6257 8.44596C19.4195 8.49797 19.241 8.60293 19.085 8.75091C18.919 8.90783 18.7756 9.11331 18.65 9.35608C18.6162 9.42162 18.5582 9.47082 18.4888 9.4929C18.4193 9.51498 18.3441 9.50813 18.2797 9.47386C18.2153 9.4394 18.1669 9.38035 18.1453 9.30967C18.1236 9.23899 18.1303 9.16244 18.164 9.0968C18.3182 8.79923 18.4984 8.54364 18.7119 8.34099C18.9353 8.13015 19.1943 7.97853 19.4957 7.90279C20.1952 7.72664 20.8615 7.95123 21.335 8.3821C21.5754 8.60121 21.7663 8.87412 21.8866 9.17532C22.0076 9.47935 22.0569 9.81346 22.0112 10.1521C21.9295 10.7564 21.5493 11.3626 20.7449 11.8072ZM18.6411 14.0135C17.6008 12.5913 17.5757 11.244 18.8383 9.99146L17.929 9.48027C17.2008 9.19183 15.8646 11.3179 16.3812 11.8857L17.0896 12.9556L16.9434 13.2659C16.9031 13.3581 16.9425 13.423 17.0412 13.4677L17.1371 13.4942L15.6431 16.8518L16.0161 17.6614L16.7622 17.4378L16.9541 17.0581L16.7703 16.7075L17.1756 16.619L17.2697 16.4327L17.0582 16.1041L17.1972 15.8293L17.6017 15.7773L17.7334 15.5171L17.5074 15.2168L17.6518 14.932L18.0643 14.8635L18.2769 14.1277L18.3721 14.1806C18.537 14.2828 18.6222 14.2171 18.6411 14.0135ZM20.5987 14.9054L20.6731 15.5929L20.2919 15.7462L20.2121 16.0503L20.4902 16.2903L20.4175 16.5669L20.0408 16.702L19.9638 16.9942L20.2336 17.2634L20.1816 17.4615L19.8113 17.6322L20.0588 17.9289L19.9521 18.3334L19.9131 18.355C19.8781 18.3511 19.8431 18.3477 19.808 18.3447L19.8076 18.3505C19.7706 18.3474 19.7335 18.3455 19.6965 18.3447L19.0017 18.3282L18.762 18.0083L19.4087 14.5814L19.1675 14.5156C19.1435 14.509 19.1231 14.493 19.1107 14.4711C19.0983 14.4492 19.0948 14.4232 19.1011 14.3988L19.2025 14.0145C18.4725 13.4513 18.1111 12.4763 18.3622 11.5205C18.685 10.2928 19.9028 9.55146 21.1099 9.82714C21.1156 9.89343 21.1141 9.96015 21.1054 10.0261C21.083 10.1923 21.0121 10.363 20.8812 10.5282C20.8633 10.5501 20.8444 10.573 20.8247 10.5949C20.634 10.5826 20.445 10.6379 20.2899 10.7514C20.1348 10.8649 20.023 11.0296 19.9737 11.2175C19.9304 11.3808 19.9367 11.5535 19.9916 11.7132C20.0042 11.768 20.0248 11.8209 20.0517 11.8729C20.1122 11.9869 20.205 12.0798 20.318 12.1394C20.3917 12.1885 20.4725 12.2255 20.5575 12.249C20.9906 12.3667 21.4345 12.113 21.5637 11.6794C21.6888 11.5672 21.8035 11.4434 21.9062 11.3097C22.0964 11.0605 22.2264 10.7957 22.3035 10.5264C22.8273 11.1015 23.0577 11.9295 22.8434 12.7438C22.5923 13.6995 21.7986 14.3604 20.8911 14.4764L20.7898 14.8607C20.7832 14.8851 20.7675 14.9059 20.746 14.9185C20.7245 14.9312 20.699 14.9347 20.675 14.9283L20.5987 14.9054ZM28.2544 0.94816V5.06423L25.1416 2.97347V0.94816H28.2544Z"
                fill="var(--goldenLight)"
              />
            </svg>
          }
          title={language === "ar" ? " إجمالي عدد الوحدات" : "Total Properties"}
          value={data.noOfProperties}
          color="var(--goldenLight)"
        />
      </AdminAnalytics>

      <div className="admin__balance__container">
        <div className="admin__balance__card">
          <div className="admin__card__heading">
            {languageText(language, "Sales", "المبيعات")}
          </div>
          <div className="admin__card__number">
            {formatCurrency(data.totalPaid)}
          </div>
          <div className="balance__entry">
            <div className="balance__entry__title">
              {languageText(language, "Expected", "المبلغ المتوقع")}
            </div>
            <div className="balance__entry__price">
              {formatCurrency(data.totalExpected)}
            </div>
          </div>
        </div>

        <div className="admin__payment__chart">
          <div className="admin__payment__chart__header">
            <div className="admin__payment__chart__title">
              <div className="admin__payment__chart__title__header">
                {languageText(language, "Sales", "المبيعات")}
              </div>
            </div>
            <div className="admin__chart__calender">
              <DateRange
                value={dateRange}
                onChange={(value) => setDateRange(value)}
              />
            </div>
          </div>

          <div className="receiver__warper">
            <div className="receiver__warper__col">
              <div className="receiver__col__title">
                {languageText(language, "Sold", "مباع")}
              </div>
              <div className="receiver__col__num">
                {numberDisplay(data.totalSoldProperties)}
              </div>
            </div>
            <div className="receiver__warper__col">
              <div className="receiver__col__title">
                {languageText(language, "Remaining", "متبقي")}
              </div>
              <div className="receiver__col__num">
                {numberDisplay(data.totalRemainingProperties)}
              </div>
            </div>
          </div>

          <ResponsiveContainer width="100%" height={225}>
            <AreaChart
              data={chartData(soldByDateFiltered)}
              margin={{ top: 10, right: 30, left: 0, bottom: 0 }}
            >
              <defs>
                <linearGradient id="colorSales" x1="0" y1="0" x2="0" y2="1">
                  <stop offset="5%" stopColor="#66D0AF" stopOpacity={0.8} />
                  <stop offset="95%" stopColor="#66D0AF" stopOpacity={0} />
                </linearGradient>
              </defs>
              <CartesianGrid strokeDasharray="1 1" />
              <XAxis dataKey="name" />
              <YAxis />
              <Tooltip />
              <Area
                type="monotone"
                dataKey="sales"
                stackId="3"
                stroke="#00A76F"
                fill="url(#colorUv)"
                strokeWidth={2}
              />
            </AreaChart>
          </ResponsiveContainer>
        </div>
      </div>

      <div className="admin__balance__container">
        <div className="admin__payment__chart">
          <div className="admin__payment__chart__header">
            <div className="admin__payment__chart__title">
              <div className="admin__payment__chart__title__header">
                {languageText(language, "Analytics", "التحليلات")}
              </div>
            </div>
          </div>

          <div className="receiver__warper">
            <div className="receiver__warper__col">
              <div className="receiver__col__title">
                {languageText(language, "Visits", "الزيارات")}
              </div>
              <div className="receiver__col__num">
                {Object.values(analyticsByDateFiltered).reduce(
                  (acc, { visits }) => acc + visits,
                  0
                )}
              </div>
            </div>
            <div className="receiver__warper__col">
              <div className="receiver__col__title">
                {languageText(language, "Clicks", "متبقي")}
              </div>
              <div className="receiver__col__num">
                {Object.values(analyticsByDateFiltered).reduce(
                  (acc, { clicks }) => acc + clicks,
                  0
                )}
              </div>
            </div>
          </div>

          <ResponsiveContainer width="100%" height={225}>
            <LineChart
              data={Object.entries(analyticsByDateFiltered).map(
                ([name, value]) => ({
                  name,
                  visits: value.visits,
                  clicks: value.clicks
                })
              )}
              margin={{ top: 10, right: 30, left: 0, bottom: 0 }}
            >
              <CartesianGrid strokeDasharray="2 2" />
              <XAxis dataKey="name" />
              <YAxis />
              <Tooltip />
              <Line
                type="monotone"
                dataKey="visits"
                stroke="#FFAB00"
                activeDot={{ r: 8 }}
                strokeWidth={2}
              />
              <Line
                type="monotone"
                dataKey="clicks"
                stroke="#00A76F"
                strokeWidth={2}
              />
            </LineChart>
          </ResponsiveContainer>
        </div>
      </div>
    </>
  );
}
